(dp1
S'output'
p2
S"<type 'exceptions.AttributeError'> "
p3
sS'layer'
p4
S'C:\\Users\\PeAce\\Desktop\\web2py\\applications\\381spmch2\\controllers/default.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n#########################################################################\n## This is a sample controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n#########################################################################\n\nfrom gluon.tools import Crud\ncrud = Crud(db)\n\n\ndef index():\n    show_all = request.args(0) == \'all\'\n    if show_all:\n        button = A(\'Show available items\', _class="btn btn-info", _href=URL(\'default\', \'index\'))\n    else:\n        button = A(\'Show all items\', _class="btn btn-info", _href=URL(\'default\', \'index\', args=[\'all\']))\n\n    if show_all:\n        q = db.forSaleList\n        listings = db().select(db.forSaleList.ALL, orderby =~ db.forSaleList.votes)\n    else:\n        q=(db.forSaleList.Status == True)\n        listings = db(db.forSaleList.Status == True).select(db.forSaleList.ALL, orderby =~ db.forSaleList.votes)\n\n    ##votes =  db(db.forSaleList.user_id == db.vote.posted_by).select(db.forSaleList.ALL)\n\n    form = SQLFORM.grid(q,\n        args=request.args[:1],\n        fields=[db.forSaleList.Title,\n                    db.forSaleList.Seller,\n                    db.forSaleList.Description,\n               ],\n        editable=False, deletable=False,\n        paginate=10,\n        csv=False,\n        create=False,\n        searchable=False\n        )\n    return dict(listings=listings, form=form, button=button)\n\ndef showList():\n    depts = db().select(db.forSaleList.ALL, orderby=db.forSaleList.votes)\n    return locals()\n\n@auth.requires_login()\ndef voteUp():\n    item = db.auth_user(request.vars.id)\n    print item.user_id\n    if item.votesUp is None:\n       item.update_record(votesUp=0)\n    new_votes = item.votesUp + 1\n    item.update_record(votesUp=new_votes)\n    return str(new_votes)\n\n@auth.requires_login()\ndef voteDown():\n    itemDown = db.auth_user(request.vars.id)\n    if itemDown.votesDown is None:\n       itemDown.update_record(votesDown= 0)\n    new_votesDown = itemDown.votesDown + 1\n    itemDown.update_record(votesDown=new_votesDown)\n    return str(new_votesDown)\n\n@auth.requires_login()\ndef addItem():\n    crud.messages.submit_button = \'Place on market\'\n    crud.settings.keepvalues = True\n    crud.settings.label_separator = \' :\'\n    crud.settings.formstyle = \'ul\'\n    db.forSaleList.user_id.default = auth.user.id\n    form = crud.create(db.forSaleList)\n    if form.process().accepted:\n        # Successful processing.\n        session.flash = T("accepted")\n        redirect(URL(\'default\', \'index\'))\n    return locals()\n\n@auth.requires_login()\ndef add():\n    """Add a post."""\n    db.forSaleList.user_id.default = auth.user.id\n    SQLFORM.messages.submit_button = \'Place on market\'\n    form = SQLFORM(db.forSaleList)\n    if form.process().accepted:\n        # Successful processing.\n        session.flash = T("accepted")\n        redirect(URL(\'default\', \'index\'))\n    return locals()\n\n\n@auth.requires_login()\ndef manageItems():\n    grid = SQLFORM.grid(db.forSaleList)\n    return locals()\n\n@auth.requires_login()\ndef show():\n    image = db.forSaleList(request.args(0,cast=int)) or redirect(URL(\'index\'))\n    #forum = db.post(request.args(0,cast=int)) or redirect(URL(\'generalForum\'))\n    #comms  = db(db.comm.post_id==forum.id).select(db.comm.ALL, orderby=db.comm.datetime)\n    db.imageList.forSaleList_id.default = image.id\n    db.imageList.user_id.default = auth.user.id\n    form = SQLFORM(db.imageList,record=None,\n        deletable=False, linkto=None,\n        upload=None, fields=None, labels=None,\n        col3={}, submit_button=\'Post image\',\n        delete_label=\'Check to delete:\',\n        showid=True, readonly=False,\n        comments=True, keepopts=[],\n        ignore_rw=False, record_id=None,\n        formstyle=\'bootstrap3_stacked\',\n        buttons=[\'submit\'], separator=\':\')\n    #form = crud.create(db.imageList)\n    if form.process().accepted:\n        # Successful processing.\n        session.flash = T("Image added")\n        #redirect(URL(\'default\', \'index\'))\n    itemImages= db(db.imageList.forSaleList_id==image.id).select(db.imageList.ALL)\n    return locals()\n\n\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    http://..../[app]/default/user/bulk_register\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    also notice there is http://..../[app]/appadmin/manage/auth to allow administrator to manage users\n    """\n    return dict(form=auth())\n\n\n@cache.action()\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request, db)\n\nresponse._vars=response._caller(voteUp)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "C:\\Users\\PeAce\\Desktop\\web2py\\gluon\\restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "C:\\Users\\PeAce\\Desktop\\web2py\\applications\\381spmch2\\controllers/default.py", line 154, in <module>\n  File "C:\\Users\\PeAce\\Desktop\\web2py\\gluon\\globals.py", line 412, in <lambda>\n    self._caller = lambda f: f()\n  File "C:\\Users\\PeAce\\Desktop\\web2py\\gluon\\tools.py", line 4236, in f\n    return action(*a, **b)\n  File "C:\\Users\\PeAce\\Desktop\\web2py\\applications\\381spmch2\\controllers/default.py", line 52, in voteUp\n    print item.user_id\n  File "C:\\Users\\PeAce\\Desktop\\web2py\\gluon\\packages\\dal\\pydal\\objects.py", line 90, in __getattr__\n    raise AttributeError\nAttributeError\n'
p11
s.